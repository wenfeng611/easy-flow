<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.auditflow.customize.mapper.AuditFlowItemMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.auditflow.customize.entity.AuditFlowItemEntity" id="auditFlowItemMap">
        <id property="id" jdbcType="INTEGER" column="id"/>
        <result property="flowId" column="flow_id"/>
        <result property="currentNodeId" column="current_node_id"/>
        <result property="auditStatus" column="audit_status"/>
        <result property="createTime" column="add_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createrName" column="creator"/>
		<result property="sceneCode" column="scene_code"/>
		<result property="flowName" column="flow_name"/>
		<result property="formUrl" column="form_url"/>
		<result property="userIds" column="user_ids"/>
    </resultMap>

    <sql id="base_colum">
			id,
			`flow_id`,
			`current_node_id`,
			`audit_status`,
			`add_time`,
			`update_time`,
			`creator`
	</sql>

    <insert id="save" parameterType="com.auditflow.customize.entity.AuditFlowItemEntity" useGeneratedKeys="true" keyProperty="id">
        insert into audit_flow_item
		(
		    `flow_id`,
			`current_node_id`,
			`audit_status`,
			`add_time`,
			`update_time`,
			`creator`,
			scene_code
		)
		values
		(
			#{flowId},
			#{currentNodeId},
			#{auditStatus},
			#{createTime},
			#{updateTime},
			#{createrName},
			#{sceneCode}
		)
    </insert>

	<insert id="saveBatch" parameterType="com.auditflow.customize.entity.AuditFlowItemEntity" useGeneratedKeys="true" keyProperty="id">
        insert into audit_flow_item
		(
		    `flow_id`,
			`current_node_id`,
			`audit_status`,
			`add_time`,
			`update_time`,
			`creator`,
			scene_code,
			user_ids
		)
		values
		<foreach collection="list" index="index" item="item"
				 separator=",">
			(
			#{item.flowId},
			#{item.currentNodeId},
			#{item.auditStatus},
			#{item.createTime},
			#{item.updateTime},
			#{item.createrName},
			#{item.sceneCode},
			#{item.userIds}
			)
		</foreach>
		;
    </insert>

    <update id="updateAuditStatusAndNodeId">
        update audit_flow_item
		set update_time=now()
		<if test="nodeId!= null">
            ,current_node_id=#{nodeId}
        </if>
        <if test="auditStatus!= null and auditStatus!= 0">
            ,audit_status=#{auditStatus}
        </if>
		where id=#{id}
    </update>

	<update id="updateFlowId">
		update audit_flow_item
		set update_time=now(),flow_id=#{flowId}
		where id=#{id}
	</update>

	<update id="updateAuditStatusAndNodeIdAndAuditUserids">
		update audit_flow_item
		set update_time=now()
		<if test="nodeId!= null">
			,current_node_id=#{nodeId}
		</if>
		<if test="auditStatus!= null and auditStatus!= 0">
			,audit_status=#{auditStatus}
		</if>
		<if test="userIds!= null and userIds!= ''">
			,user_ids=#{userIds}
		</if>
		where id=#{id}
	</update>

	<select id="findById" resultMap="auditFlowItemMap">
        select <include refid="base_colum"></include> from audit_flow_item where id=#{id} limit 1
    </select>

	<select id="countRunningFlowItems" resultType="java.lang.Integer">
		select count(*) from audit_flow_item where flow_id=#{flowId} and audit_status &lt; 4
	</select>

	<select id="selectFlowItems" resultMap="auditFlowItemMap">
		select i.id,
			i.`flow_id`,
			i.`current_node_id`,
			i.`audit_status`,
			i.`add_time`,
			i.`update_time`,
			i.`creator`,
			i.user_ids,
			f.flow_name,
			i.scene_code,
			f.form_url
		from audit_flow_item i
		left join audit_flow f on f.id=i.flow_id
		where 1=1
		<if test="sceneCode!=null and sceneCode!=''">
			and f.scene_code = #{sceneCode}
		</if>
		<if test="flowId!=null and flowId!=0">
			and i.flow_id=#{flowId}
		</if>
		<if test="businessId!=null and businessId!=0">
			and i.id=#{businessId}
		</if>
		<if test="auditStatus!=null and auditStatus!=0">
			and i.audit_status=#{auditStatus}
		</if>
		order by i.id desc
	</select>
    <select id="selectByIds" resultMap="auditFlowItemMap">
		select * from audit_flow_item where id in
		<foreach collection="dataList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

</mapper>
